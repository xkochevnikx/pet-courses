services:
  db:
    image: postgres:17-alpine
    container_name: db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  minio:
    image: minio/minio:latest
    container_name: minio
    entrypoint: sh
    command: -c 'minio server --console-address ":9001" /data'
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minio123}
    ports:
      - "9000:9000" # API
      - "9001:9001" # Web-консоль
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: always

  createbuckets:
    image: minio/mc:latest
    container_name: minio-init
    depends_on:
      minio:
        condition: service_healthy
    environment:
      # alias через переменную окружения — самый простой способ
      MC_HOST_myminio: "http://${MINIO_ROOT_USER:-minio}:${MINIO_ROOT_PASSWORD:-minio123}@minio:9000"
      S3_BUCKET: ${S3_BUCKET:-images}
    entrypoint: ["/bin/sh", "-lc"]
    command:
      - >
        set -euo pipefail;
        echo "S3_BUCKET=${S3_BUCKET:-images}";
        mc ls myminio >/dev/null 2>&1 || { echo "mc can't reach myminio"; exit 1; };
        mc mb -p myminio/${S3_BUCKET:-images} || true;
        mc anonymous set download myminio/${S3_BUCKET:-images} ||
        mc anonymous set public  myminio/${S3_BUCKET:-images} || true;
        echo "Buckets now:"; mc ls myminio
    restart: "no"

volumes:
  db-data:
    name: pet-courses-project_db-data
  minio-data:
    name: pet-courses-project_minio-data
